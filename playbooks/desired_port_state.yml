---
- name: Triage Down Interfaces 
  hosts: "{{ rtr }}"
  gather_facts: False
  tasks:
  - name: Attempt a No shut for {{ inventory_hostname }} {{ interface }}
    ansible.netcommon.network_resource:
      os_name: "{{ ansible_network_os }}"
      name: interfaces
      config: 
      - name: "{{ interface }}"
        enabled: True
      state: merged
    
  - name: Check Interface State for {{ inventory_hostname }} {{ interface }}
    ansible.netcommon.cli_command:
      command: show ip interface {{ interface }}
    register: int_state

  - name: Print Event Info
    ansible.builtin.debug:
      var: int_state.stdout_lines

  - name: Assert that {{ inventory_hostname }} {{ interface }} is UP
    block:
    - ansible.builtin.assert:
        that: 
            - "'line protocol is up' in int_state['stdout']"
        fail_msg: "{{ inventory_hostname }} {{ interface }} line protocol is down"
        success_msg: "{{ inventory_hostname }} {{ interface }} line protocol is up"
    rescue: 
    - name: Collect running config for {{ inventory_hostname }} {{ interface }} 
      ansible.netcommon.cli_command:
         command: show run interface {{ interface }}
      register: running


    - name: Create SNOW ticket for {{ inventory_hostname }} {{ interface }}
      servicenow.itsm.incident:
        instance:
          host: "{{ SN_HOST }}"
          username: "{{ SN_USERNAME }}"
          password: "{{ SN_PASSWORD }}"
        state: new
        impact: high
        urgency: high
        description: "{{inventory_hostname}} {{ interface }} is line protocol down ######## {{ int_state.stdout_lines }} ######## {{ running.stdout_lines }}"
        short_description: "{{inventory_hostname}} {{ interface }} is line protocol down"
      register: snow_var
      delegate_to: localhost
      
    - name: Show incident number
      ansible.builtin.debug:
        msg: 
        - "{{ SN_HOST }}"
        - "{{ snow_var.record.number }}"
      delegate_to: localhost



        



